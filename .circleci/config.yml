version: 2.1
orbs:
  gi:
    jobs:
      test_standalone_image:
        parameters:
          app_image:
            type: string
          ngrok_token:
            type: string
          api_key:
            type: string
          suite_id:
            type: string
          app_port:
            type: string
        executor: standalone
        steps:
          - setup_remote_docker
          - run:
              name: Create ghost-inspector docker network
              command: docker network create gi-test-network
          - run:
              name: Start test application
              command: |
                docker run -d \
                  --network gi-test-network \
                  --name test-application \
                  << parameters.app_image >>
          - run_standalone_test:
              ngrok_token: << parameters.ngrok_token >>
              api_key: << parameters.api_key >>
              suite_id: << parameters.suite_id >>
              app_port: << parameters.app_port >>
    commands:
      run_standalone_test:
        parameters:
          ngrok_token:
            type: string
          api_key:
            type: string
          suite_id:
            type: string
          app_port:
            type: string
        steps:
          - run:
              name: Execute Ghost Inspector test suite
              command: |
                docker run \
                  -e NGROK_TOKEN=<< parameters.ngrok_token >> \
                  -e GI_API_KEY=<< parameters.api_key >> \
                  -e GI_SUITE=<< parameters.suite_id >> \
                  -e APP_PORT=test-application:<< parameters.app_port >> \
                  --network gi-test-network \
                  ghostinspector/test-runner-standalone:0.1.81
    executors:
      standalone:
        docker:
          - image: docker:17.05.0-ce-git

jobs:
  build-and-test-base-image:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Build ghostinspector/test-runner-node
          command: |
            cp -R ./includes/ ./test-runner-node/includes
            IMAGE_ID=$(docker build -q -t ghostinspector/test-runner-node ./test-runner-node)
            docker tag $IMAGE_ID ghostinspector/test-runner-node:0.1.$CIRCLE_BUILD_NUM
      - run:
          name: Build node-app image
          command: |
            docker build -t node-app:0.1.$CIRCLE_BUILD_NUM ./test/node-app
      - run:
          name: Execute test
          command: |
            docker run \
              -e NGROK_TOKEN=$NGROK_TOKEN \
              -e GI_API_KEY=$GI_API_KEY \
              -e GI_SUITE=5a9ebeab9d311c32b43f3f5d \
              -e GI_PARAM_sha=$CIRCLE_SHA1 \
              -e GI_PARAM_build=$CIRCLE_BUILD_NUM \
              -e APP_PORT=8000 \
              -e MY_ENV_VAR=my-env-var \
              node-app:0.1.$CIRCLE_BUILD_NUM index.js --sha=$CIRCLE_SHA1 --build=$CIRCLE_BUILD_NUM
      - run:
          name: Push new ghostinspector/test-runner-node image to Docker Hub
          command: |
            if [ $CIRCLE_BRANCH = 'master' ]; then
              echo "Pushing new image to Docker Hub"
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker push ghostinspector/test-runner-node:0.1.$CIRCLE_BUILD_NUM
              docker push ghostinspector/test-runner-node:latest
            else
              echo "On branch $CIRCLE_BRANCH, nothing else to do."
            fi

  build-and-test-standalone-image:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Build ghostinspector/test-runner-standalone
          command: |
            cp -R ./includes/ ./test-runner-standalone/includes
            IMAGE_ID=$(docker build -q -t ghostinspector/test-runner-standalone ./test-runner-standalone)
            docker tag $IMAGE_ID ghostinspector/test-runner-standalone:0.1.$CIRCLE_BUILD_NUM
      - run:
          name: Build standalone-app image
          command: |
            docker build -t ghostinspector/standalone-app:0.1.$CIRCLE_BUILD_NUM ./test/standalone-app
      - run:
          name: Execute test
          command: |
            docker network create temp-network
            docker run -d \
              --network temp-network \
              --name standalone-app \
              ghostinspector/standalone-app:0.1.$CIRCLE_BUILD_NUM --sha=$CIRCLE_SHA1
            docker run \
              -e NGROK_TOKEN=$NGROK_TOKEN \
              -e GI_API_KEY=$GI_API_KEY \
              -e GI_SUITE=5a9f04539d311c32b43f49d6 \
              -e GI_PARAM_sha=$CIRCLE_SHA1 \
              -e APP_PORT=standalone-app:8000 \
              --network temp-network \
              ghostinspector/test-runner-standalone:0.1.$CIRCLE_BUILD_NUM
      - run:
          name: Push new ghostinspector/test-runner-standalone image to Docker Hub
          command: |
            if [ $CIRCLE_BRANCH = 'master' ]; then
              echo "Pushing new image to Docker Hub"
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker push ghostinspector/test-runner-standalone:0.1.$CIRCLE_BUILD_NUM
              docker push ghostinspector/test-runner-standalone:latest
            else
              echo "On branch $CIRCLE_BRANCH, nothing else to do."
            fi

      - run:
          name: Push new ghostinspector/standalone-app image to Docker Hub (for testing orbs)
          command: |
            echo "Pushing standalone-app to Docker Hub"
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push ghostinspector/standalone-app:0.1.$CIRCLE_BUILD_NUM
            docker push ghostinspector/standalone-app:latest

workflows:
  test:
    jobs:
      - build-and-test-base-image
      - build-and-test-standalone-image
      - gi/test_standalone_image:
          ngrok_token: $NGROK_TOKEN
          api_key: $GI_API_KEY
          suite_id: $GI_SUITE
          app_port: '8000'
          app_image: ghostinspector/standalone-app:0.1.$CIRCLE_BUILD_NUM
          requires:
            - build-and-test-standalone-image
